@model Demo.AspNetCore.Htmx.Models.Model

@{
    ViewData["Title"] = "Details";
}

<h1>Details</h1>

<div>
    <h4>Model</h4>
    <hr />
    <dl class="row">
        <dt class = "col-sm-2">
            @Html.DisplayNameFor(model => model.ModelName)
        </dt>
        <dd class = "col-sm-10">
            @Html.DisplayFor(model => model.ModelName)
        </dd>
        <dt class = "col-sm-2">
            @Html.DisplayNameFor(model => model.Power_KW)
        </dt>
        <dd class = "col-sm-10">
            @Html.DisplayFor(model => model.Power_KW)
        </dd>
        <dt class = "col-sm-2">
            @Html.DisplayNameFor(model => model.Capacity)
        </dt>
        <dd class = "col-sm-10">
            @Html.DisplayFor(model => model.Capacity)
        </dd>
        <dt class = "col-sm-2">
            @Html.DisplayNameFor(model => model.Category)
        </dt>
        <dd class = "col-sm-10">
            @Html.DisplayFor(model => model.Category.CategoryName)
        </dd>
        <dt class = "col-sm-2">
            @Html.DisplayNameFor(model => model.Manufacturer)
        </dt>
        <dd class = "col-sm-10">
            @Html.DisplayFor(model => model.Manufacturer.ManufacturerName)
        </dd>
    </dl>
</div>
@*'Back to List' has the same url as the 'nav-link' for 'Model'.
'data-loading-states' defines a scope for the loading states so only elements within that scope are processed.
The nav-link 'Model' remains enabled*@
<div hx-boost="true" hx-push-url="false" hx-target="#mainId" hx-indicator="this" data-loading-states>
    <a asp-action="Edit" asp-route-id="@Model?.ModelId" data-loading-class="disabled">Edit</a> |
    <a asp-action="Index" data-loading-class="disabled">Back to List</a>
    <partial name="_indicator" />
</div>
